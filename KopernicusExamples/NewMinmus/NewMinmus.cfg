@Kopernicus:AFTER[Kopernicus]
{
	// We want to edit Minmus, because it's so boring. 
	@Body[Minmus] 
	{
		@Template
		{
			removePQSMods = VertexPlanet
		}
	
		// We have to force ScaledSpace caching, because we change neither the radius, nor use no template
		Debug
		{
			exportBin = true
		}
		
		// Change Minmus Orbit-color to a bright orange (Example for using 32-bit colors with Kopernicus) 
		@Orbit
		{
			color = RGBA(205, 155, 84, 255)
		}

		// Ajust the ScaledVersion settings
		@ScaledVersion
        {
            Material
            {
                // Common scaled space settings
                texture = KopernicusExamples/NewMinmus/Textures/Minmus_Color
                normals = KopernicusExamples/NewMinmus/Textures/Minmus_Normal
                shininess = 0
                specular = 0,0,0,1
            }
        }
		
		// Manipulate Minmus PQS, VertexPlanet to be exact
		@PQS
		{
			Mods
			{
				// This is one of the most powerful mods, it can generate a fully procedural Planet. I have no idea what some of the values do..
				VertexPlanet
				{
					buildHeightColors = false
					colorDeformity = 6000
					ContinentalSimplex
					{
						deformity = 1
						frequency = 1
						octaves = 10
						persistance = 0.400000005960464
						seed = 33124
					}
					RuggednessSimplex
					{
						deformity = 1
						frequency = 0.5
						octaves = 4
						persistance = 0.5
						seed = 33125
					}
					SharpnessNoise
					{
						seed = 0
						deformity = 0.00100000004749745
						octaves = 4
						persistance = 0.5
						frequency = 0.5
						Noise
						{
							frequency = 0.5
							lacunarity = 0.5
							quality = High
							octaveCount = 4
							seed = 33127
						}
					}
					SharpnessSimplexMap
					{
						deformity = 50
						frequency = 1.5
						octaves = 4
						persistance = 0.550000011920929
						seed = 33128
					}
					deformity = 2305
					
					// The LandClasses define the surface-color, so we change them
					LandClasses
					{
						LandClass
						{
							name = AbyPl
							baseColor = 0.376, 0.141, 0.117, 1.000
							colorNoise = 0.386, 0.151, 0.127, 1.000
							colorNoiseAmount = 0.200000002980232
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 4
								octaves = 4
								persistance = 0.600000023841858
								seed = 33133
							}
							fractalStart = 0
							fractalEnd = 0.00100000004749745
							fractalDelta = 0.00100000004749745
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Beach
							baseColor = 0.611, 0.260, 0.220, 1.000
							colorNoise = 0.500, 0.250, 0.230, 1.000
							colorNoiseAmount = 0.200000002980232
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 4
								octaves = 4
								persistance = 0.600000023841858
								seed = 33134
							}
							fractalStart = 0.00100000004749745
							fractalEnd = 0.449999988079071
							fractalDelta = 0.448999988031574
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Grass
							baseColor = 0.198, 0.128, 0.062, 1.000
							colorNoise = 0.18, 0.12, 0.05, 1.000
							colorNoiseAmount = 0.300000011920929
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 3
								octaves = 4
								persistance = 0.600000023841858
								seed = 33135
							}
							fractalStart = 0.449999988079071
							fractalEnd = 0.899999976158142
							fractalDelta = 0.449999988079071
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Snow
							baseColor = 0.198, 0.128, 0.062, 1.000
							colorNoise = 0.18, 0.12, 0.05, 1.000
							colorNoiseAmount = 0.400000005960464
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 2
								octaves = 4
								persistance = 0.600000023841858
								seed = 33136
							}
							fractalStart = 0.899999976158142
							fractalEnd = 2
							fractalDelta = 1.10000002384186
							startHeight = 0
							endHeight = 0
							lerpToNext = false
						}
					}
					oceanDepth = 0
					oceanLevel = 0
					oceanSnap = false
					oceanStep = 0
					seed = 33123
					terrainRidgeBalance = 0.1
					terrainRidgesMax = 1
					terrainRidgesMin = 0.4
					terrainShapeStart = 2
					terrainShapeEnd = -2
					terrainSmoothing = 0.100000001490116
					TerrainTypeSimplex
					{
						deformity = 1
						frequency = 4
						octaves = 12
						persistance = 0.7
						seed = 33126
					}
					enabled = True
					order = 100		
				}
				
				VertexHeightOffset
				{
					offset = -107
					enabled = true
					order = 101
				}
			}
		}
		
		// Add an Ocean
		Ocean
		{
			maxQuadLengthsPerFrame = 0.03
            minLevel = 2
            maxLevel = 12
            minDetailDistance = 8
			oceanColor = #2E8ECB
			
			Material
			{
				colorFromSpace = #2E8ECB
				// color = 1, 0.2, 0.2, 1.000 - If you wan't to color the water
			}
			
			FallbackMaterial
			{
				colorFromSpace = #2E8ECB
				// color = 1, 0.2, 0.2, 1.000
			}
			
			Mods
			{
				AerialPerspectiveMaterial
				{
					globalDensity = -0.00001
					heightFalloff = 6.75
					atmosphereDepth = 150000
					DEBUG_SetEveryFrame = true
					cameraAlt = 0
					cameraAtmosAlt = 0
					heightDensAtViewer = 0
					enabled = true
					order = 100
				}
						
				OceanFX
				{
					Watermain
					{
						waterTex-0 = KopernicusExamples/NewMinmus/Textures/waterTex
						waterTex-1 = KopernicusExamples/NewMinmus/Textures/waterTex
					}
				
					framesPerSecond = 1
					spaceAltitude = 0
					blendA = 0
					blendB = 0
					texBlend = 0
					angle = 0
					specColor = 0.000, 0.000, 0.000, 0.000
					oceanOpacity = 0
					spaceSurfaceBlend = 0
					enabled = true
					order = 100
				}
			}
		}
	}
}